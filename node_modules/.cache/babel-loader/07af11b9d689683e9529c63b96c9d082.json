{"ast":null,"code":"import { colorFormats } from '../util/apiCalls.js';\nexport const cleanColorName = async (updateArrayOfColors, palettes) => {\n  const colorInfo = await palettes.map(color => colorFormats(color));\n  const promiseResolve = await Promise.all(colorInfo);\n  const cleanedColorData = promiseResolve.map(colorObj => {\n    const XYZ = colorObj.XYZ,\n          cmyk = colorObj.cmyk,\n          hex = colorObj.hex,\n          hsl = colorObj.hsl,\n          hsv = colorObj.hsv,\n          image = colorObj.image,\n          rgb = colorObj.rgb;\n    return {\n      XYZ,\n      cmyk,\n      hex,\n      hsl,\n      hsv,\n      image,\n      rgb\n    };\n  });\n  updateArrayOfColors(cleanedColorData);\n};","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/util/cleanerFunctions.js"],"names":["colorFormats","cleanColorName","updateArrayOfColors","palettes","colorInfo","map","color","promiseResolve","Promise","all","cleanedColorData","colorObj","XYZ","cmyk","hex","hsl","hsv","image","rgb"],"mappings":"AAAA,SAASA,YAAT,QAA4B,qBAA5B;AAEA,OAAO,MAAMC,cAAc,GAAG,OAAOC,mBAAP,EAA4BC,QAA5B,KAAyC;AACnE,QAAMC,SAAS,GAAG,MAAMD,QAAQ,CAACE,GAAT,CAAaC,KAAK,IAAIN,YAAY,CAACM,KAAD,CAAlC,CAAxB;AACA,QAAMC,cAAc,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYL,SAAZ,CAA7B;AACA,QAAMM,gBAAgB,GAAGH,cAAc,CAACF,GAAf,CAAoBM,QAAQ,IAAI;AAAA,UAC9CC,GAD8C,GACND,QADM,CAC9CC,GAD8C;AAAA,UACzCC,IADyC,GACNF,QADM,CACzCE,IADyC;AAAA,UACnCC,GADmC,GACNH,QADM,CACnCG,GADmC;AAAA,UAC9BC,GAD8B,GACNJ,QADM,CAC9BI,GAD8B;AAAA,UACzBC,GADyB,GACNL,QADM,CACzBK,GADyB;AAAA,UACpBC,KADoB,GACNN,QADM,CACpBM,KADoB;AAAA,UACbC,GADa,GACNP,QADM,CACbO,GADa;AAErD,WAAO;AAACN,MAAAA,GAAD;AAAMC,MAAAA,IAAN;AAAYC,MAAAA,GAAZ;AAAiBC,MAAAA,GAAjB;AAAsBC,MAAAA,GAAtB;AAA2BC,MAAAA,KAA3B;AAAkCC,MAAAA;AAAlC,KAAP;AACH,GAHwB,CAAzB;AAIAhB,EAAAA,mBAAmB,CAACQ,gBAAD,CAAnB;AACH,CARM","sourcesContent":["import { colorFormats} from '../util/apiCalls.js'\n\nexport const cleanColorName = async (updateArrayOfColors, palettes) => {\n    const colorInfo = await palettes.map(color => colorFormats(color))\n    const promiseResolve = await Promise.all(colorInfo)\n    const cleanedColorData = promiseResolve.map( colorObj => {\n        const {XYZ, cmyk, hex, hsl, hsv, image, rgb} = colorObj\n        return {XYZ, cmyk, hex, hsl, hsv, image, rgb}\n    })\n    updateArrayOfColors(cleanedColorData)\n}"]},"metadata":{},"sourceType":"module"}
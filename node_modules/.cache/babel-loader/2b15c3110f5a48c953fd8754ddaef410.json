{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getFiveColors, createPalette } from '../../util/apiCalls.js';\nimport RandomPalette from '../RandomPalette/RandomPalette.js';\nimport './RandomColor.scss';\nimport SaveMenu from '../SaveMenu/SaveMenu';\nimport { Link } from 'react-router-dom';\n\nconst GetRandomColors = ({\n  arrayOfColors,\n  updateArrayOfColors,\n  userID,\n  currentCatalog,\n  openSaveMenu,\n  catalogs,\n  showSaveMenu,\n  closeSaveMenu,\n  resetCurrentCatalog,\n  fetchPalettes\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        paletteNameValue = _useState2[0],\n        handlePaletteNameValueChange = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        showCatalogs = _useState4[0],\n        handleShowCatalogsChange = _useState4[1];\n\n  const handleGenerateColors = async event => {\n    // event.preventDefault();\n    getFiveColors(updateArrayOfColors);\n    checkToShowCatalog();\n  };\n\n  useEffect(() => {\n    handleGenerateColors();\n  }, []);\n\n  const checkToShowCatalog = () => {\n    handleShowCatalogsChange(currentCatalog ? false : true);\n  };\n\n  const handleSavePalette = async event => {\n    if (userID && currentCatalog === 0) {\n      handleShowCatalogsChange(true);\n      openSaveMenu();\n    } else {\n      const newPalette = {\n        paletteName: paletteNameValue,\n        catalog_id: currentCatalog,\n        user_id: userID,\n        colorsToString: arrayOfColors\n      };\n      createPalette(newPalette);\n      handlePaletteNameValueChange('');\n    }\n  };\n\n  const postPalette = async id => {\n    const newPalette = {\n      paletteName: paletteNameValue,\n      catalog_id: id,\n      user_id: userID,\n      colorsToString: arrayOfColors\n    };\n    createPalette(newPalette);\n    handlePaletteNameValueChange('');\n    resetCurrentCatalog();\n  };\n\n  const canBeSubmitted = () => {\n    return paletteNameValue.length > 0 && arrayOfColors.length;\n  };\n\n  const isEnabled = canBeSubmitted();\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"random-generator__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"random-generator__div-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"palette-name__label-and__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"palette-name__input\",\n    id: \"palette-name\",\n    type: \"text\",\n    name: \"palette-name\",\n    placeholder: \"Palette Name\",\n    onChange: e => handlePaletteNameValueChange(e.target.value),\n    value: paletteNameValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), userID ? React.createElement(Link, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"SavePaletteBtn\",\n    disabled: !isEnabled,\n    onClick: e => handleSavePalette(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(\"button\", {\n    type: \"button\",\n    className: \"SavePaletteBtn\",\n    disabled: !isEnabled,\n    onClick: e => handleSavePalette(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"GenerateColorsBtn\",\n    onClick: e => handleGenerateColors(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Generate Colors\")), React.createElement(RandomPalette, {\n    palette: arrayOfColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(SaveMenu, {\n    catalogs: catalogs,\n    closeSaveMenu: closeSaveMenu,\n    showSaveMenu: showSaveMenu,\n    postPalette: postPalette,\n    userID: userID,\n    fetchPalettes: fetchPalettes,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n};\n\nexport default GetRandomColors;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js"],"names":["React","useState","useEffect","getFiveColors","createPalette","RandomPalette","SaveMenu","Link","GetRandomColors","arrayOfColors","updateArrayOfColors","userID","currentCatalog","openSaveMenu","catalogs","showSaveMenu","closeSaveMenu","resetCurrentCatalog","fetchPalettes","paletteNameValue","handlePaletteNameValueChange","showCatalogs","handleShowCatalogsChange","handleGenerateColors","event","checkToShowCatalog","handleSavePalette","newPalette","paletteName","catalog_id","user_id","colorsToString","postPalette","id","canBeSubmitted","length","isEnabled","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getFiveColors, createPalette } from '../../util/apiCalls.js';\nimport RandomPalette from '../RandomPalette/RandomPalette.js';\nimport './RandomColor.scss';\nimport SaveMenu from '../SaveMenu/SaveMenu';\nimport { Link } from 'react-router-dom';\nconst GetRandomColors = ({\n\tarrayOfColors,\n\tupdateArrayOfColors,\n\tuserID,\n\tcurrentCatalog,\n\topenSaveMenu,\n\tcatalogs,\n\tshowSaveMenu,\n\tcloseSaveMenu,\n\tresetCurrentCatalog,\n\tfetchPalettes\n}) => {\n\tconst [paletteNameValue, handlePaletteNameValueChange] = useState('');\n\tconst [showCatalogs, handleShowCatalogsChange] = useState(false);\n\tconst handleGenerateColors = async event => {\n\t\t// event.preventDefault();\n\t\tgetFiveColors(updateArrayOfColors);\n\t\tcheckToShowCatalog();\n\t};\n\n\tuseEffect(() => {\n\t\thandleGenerateColors();\n\t}, []);\n\n\tconst checkToShowCatalog = () => {\n\t\thandleShowCatalogsChange(currentCatalog ? false : true);\n\t};\n\tconst handleSavePalette = async event => {\n\t\tif (userID && currentCatalog === 0) {\n\t\t\thandleShowCatalogsChange(true);\n\t\t\topenSaveMenu();\n\t\t} else {\n\t\t\tconst newPalette = {\n\t\t\t\tpaletteName: paletteNameValue,\n\t\t\t\tcatalog_id: currentCatalog,\n\t\t\t\tuser_id: userID,\n\t\t\t\tcolorsToString: arrayOfColors\n\t\t\t};\n\t\t\tcreatePalette(newPalette);\n\t\t\thandlePaletteNameValueChange('');\n\t\t}\n\t};\n\n\tconst postPalette = async id => {\n\t\tconst newPalette = {\n\t\t\tpaletteName: paletteNameValue,\n\t\t\tcatalog_id: id,\n\t\t\tuser_id: userID,\n\t\t\tcolorsToString: arrayOfColors\n\t\t};\n\t\tcreatePalette(newPalette);\n\t\thandlePaletteNameValueChange('');\n\t\tresetCurrentCatalog();\n\t};\n\n\tconst canBeSubmitted = () => {\n\t\treturn paletteNameValue.length > 0 && arrayOfColors.length;\n\t};\n\tconst isEnabled = canBeSubmitted();\n\treturn (\n\t\t<>\n\t\t\t<section className='random-generator__section'>\n\t\t\t\t<div className='random-generator__div-header'>\n\t\t\t\t\t<div className='palette-name__label-and__input'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='palette-name__input'\n\t\t\t\t\t\t\tid='palette-name'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='palette-name'\n\t\t\t\t\t\t\tplaceholder='Palette Name'\n\t\t\t\t\t\t\tonChange={e => handlePaletteNameValueChange(e.target.value)}\n\t\t\t\t\t\t\tvalue={paletteNameValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{userID ? (\n\t\t\t\t\t\t<Link>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='SavePaletteBtn'\n\t\t\t\t\t\t\t\tdisabled={!isEnabled}\n\t\t\t\t\t\t\t\tonClick={e => handleSavePalette(e)}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tclassName='SavePaletteBtn'\n\t\t\t\t\t\t\tdisabled={!isEnabled}\n\t\t\t\t\t\t\tonClick={e => handleSavePalette(e)}>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tclassName='GenerateColorsBtn'\n\t\t\t\t\t\tonClick={e => handleGenerateColors(e)}>\n\t\t\t\t\t\tGenerate Colors\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<RandomPalette palette={arrayOfColors} />\n\t\t\t</section>\n\t\t\t<SaveMenu\n\t\t\t\tcatalogs={catalogs}\n\t\t\t\tcloseSaveMenu={closeSaveMenu}\n\t\t\t\tshowSaveMenu={showSaveMenu}\n\t\t\t\tpostPalette={postPalette}\n\t\t\t\tuserID={userID}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t/>\n\t\t</>\n\t);\n};\nexport default GetRandomColors;\n"]},"metadata":{},"sourceType":"module"}
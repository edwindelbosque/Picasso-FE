{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js\";\nimport React, { useState } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport { delettePalette, getPalettes, getCatalogs } from '../../util/apiCalls';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        arrayOfColors = _useState2[0],\n        updateColors = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userName = _useState4[0],\n        updateUserName = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentCatalog = _useState6[0],\n        updateCurrentCatalog = _useState6[1]; // const [currentPalette, updateCurrentPalette] = useState(0);\n\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        userId = _useState8[0],\n        updateUserId = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        catalogs = _useState10[0],\n        updateCatalogs = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        palettes = _useState12[0],\n        updatePalettes = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        showSaveMenu = _useState14[0],\n        toggleSaveMenu = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        triggerMenu = _useState16[0],\n        toggleTriggerMenu = _useState16[1];\n\n  const closeSaveMenu = () => {\n    toggleSaveMenu(false);\n  };\n\n  const openSaveMenu = () => {\n    toggleSaveMenu(true);\n  };\n\n  const wipeUserData = () => {\n    updateColors([]);\n    updateUserName('');\n    updateCurrentCatalog(0); // updateCurrentPalette(0);\n\n    updateUserId(0);\n    updateCatalogs([]);\n    updatePalettes([]);\n    toggleSaveMenu(false);\n  };\n\n  const deletePalette = async palette => {\n    await delettePalette(palette);\n  };\n\n  const updateCurrentUser = (user, catalogs, palettes) => {\n    const firstName = user.firstName,\n          id = user.id;\n    updateUserName(firstName);\n    updateUserId(id);\n    updateCatalogs(catalogs);\n    updatePalettes(palettes);\n  };\n\n  const resetCurrentCatalog = () => {\n    updateCurrentCatalog(0);\n  };\n\n  const fetchPalettes = async (cats = catalogs) => {\n    if (cats.length) {\n      const allPalettes = catalogs.map(async catalog => {\n        return await getPalettes(catalog);\n      });\n      const allResolvedPalettes = await Promise.all(allPalettes);\n      updatePalettes(allResolvedPalettes.flat());\n    }\n  };\n\n  const fetchCatalogs = async (id = {\n    id: userId\n  }) => {\n    const newCatalogs = await getCatalogs({\n      id\n    });\n    updateCatalogs(newCatalogs);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(GetRandomColors, {\n    arrayOfColors: arrayOfColors,\n    updateColors: updateColors,\n    userID: userId,\n    currentCatalog: currentCatalog,\n    closeSaveMenu: closeSaveMenu,\n    openSaveMenu: openSaveMenu,\n    showSaveMenu: showSaveMenu,\n    catalogs: catalogs,\n    resetCurrentCatalog: resetCurrentCatalog,\n    fetchPalettes: fetchPalettes,\n    fetchCatalogs: fetchCatalogs,\n    toggleTriggerMenu: toggleTriggerMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(NavBar, {\n    userName: userName,\n    catalogs: catalogs,\n    updateCurrentUser: updateCurrentUser,\n    updateCurrentCatalog: updateCurrentCatalog,\n    wipeUserData: wipeUserData // updateCurrentPalette={updateCurrentPalette}\n    ,\n    deletePalette: deletePalette,\n    palettes: palettes,\n    resetCurrentCatalog: resetCurrentCatalog,\n    fetchPalettes: fetchPalettes,\n    fetchCatalogs: fetchCatalogs,\n    currentCatalog: currentCatalog,\n    triggerMenu: triggerMenu,\n    toggleTriggerMenu: toggleTriggerMenu,\n    updateColors: updateColors,\n    arrayOfColors: arrayOfColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js"],"names":["React","useState","NavBar","Footer","GetRandomColors","delettePalette","getPalettes","getCatalogs","App","arrayOfColors","updateColors","userName","updateUserName","currentCatalog","updateCurrentCatalog","userId","updateUserId","catalogs","updateCatalogs","palettes","updatePalettes","showSaveMenu","toggleSaveMenu","triggerMenu","toggleTriggerMenu","closeSaveMenu","openSaveMenu","wipeUserData","deletePalette","palette","updateCurrentUser","user","firstName","id","resetCurrentCatalog","fetchPalettes","cats","length","allPalettes","map","catalog","allResolvedPalettes","Promise","all","flat","fetchCatalogs","newCatalogs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport { delettePalette, getPalettes, getCatalogs } from '../../util/apiCalls';\n\nconst App = () => {\n\tconst [arrayOfColors, updateColors] = useState([]);\n\tconst [userName, updateUserName] = useState('');\n\tconst [currentCatalog, updateCurrentCatalog] = useState(0);\n\t// const [currentPalette, updateCurrentPalette] = useState(0);\n\tconst [userId, updateUserId] = useState(0);\n\tconst [catalogs, updateCatalogs] = useState([]);\n\tconst [palettes, updatePalettes] = useState([]);\n\tconst [showSaveMenu, toggleSaveMenu] = useState(false);\n\tconst [triggerMenu, toggleTriggerMenu] = useState(false);\n\n\tconst closeSaveMenu = () => {\n\t\ttoggleSaveMenu(false);\n\t};\n\n\tconst openSaveMenu = () => {\n\t\ttoggleSaveMenu(true);\n\t};\n\n\tconst wipeUserData = () => {\n\t\tupdateColors([]);\n\t\tupdateUserName('');\n\t\tupdateCurrentCatalog(0);\n\t\t// updateCurrentPalette(0);\n\t\tupdateUserId(0);\n\t\tupdateCatalogs([]);\n\t\tupdatePalettes([]);\n\t\ttoggleSaveMenu(false);\n\t};\n\n\tconst deletePalette = async palette => {\n\t\tawait delettePalette(palette);\n\t};\n\n\tconst updateCurrentUser = (user, catalogs, palettes) => {\n\t\tconst { firstName, id } = user;\n\t\tupdateUserName(firstName);\n\t\tupdateUserId(id);\n\t\tupdateCatalogs(catalogs);\n\t\tupdatePalettes(palettes);\n\t};\n\n\tconst resetCurrentCatalog = () => {\n\t\tupdateCurrentCatalog(0);\n\t};\n\n\tconst fetchPalettes = async (cats = catalogs) => {\n\t\tif (cats.length) {\n\t\t\tconst allPalettes = catalogs.map(async catalog => {\n\t\t\t\treturn await getPalettes(catalog);\n\t\t\t});\n\t\t\tconst allResolvedPalettes = await Promise.all(allPalettes);\n\n\t\t\tupdatePalettes(allResolvedPalettes.flat());\n\t\t}\n\t};\n\n\tconst fetchCatalogs = async (id = { id: userId }) => {\n\t\tconst newCatalogs = await getCatalogs({ id });\n\t\tupdateCatalogs(newCatalogs);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<GetRandomColors\n\t\t\t\tarrayOfColors={arrayOfColors}\n\t\t\t\tupdateColors={updateColors}\n\t\t\t\tuserID={userId}\n\t\t\t\tcurrentCatalog={currentCatalog}\n\t\t\t\tcloseSaveMenu={closeSaveMenu}\n\t\t\t\topenSaveMenu={openSaveMenu}\n\t\t\t\tshowSaveMenu={showSaveMenu}\n\t\t\t\tcatalogs={catalogs}\n\t\t\t\tresetCurrentCatalog={resetCurrentCatalog}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t\tfetchCatalogs={fetchCatalogs}\n\t\t\t\ttoggleTriggerMenu={toggleTriggerMenu}\n\t\t\t/>\n\t\t\t<NavBar\n\t\t\t\tuserName={userName}\n\t\t\t\tcatalogs={catalogs}\n\t\t\t\tupdateCurrentUser={updateCurrentUser}\n\t\t\t\tupdateCurrentCatalog={updateCurrentCatalog}\n\t\t\t\twipeUserData={wipeUserData}\n\t\t\t\t// updateCurrentPalette={updateCurrentPalette}\n\t\t\t\tdeletePalette={deletePalette}\n\t\t\t\tpalettes={palettes}\n\t\t\t\tresetCurrentCatalog={resetCurrentCatalog}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t\tfetchCatalogs={fetchCatalogs}\n\t\t\t\tcurrentCatalog={currentCatalog}\n\t\t\t\ttriggerMenu={triggerMenu}\n\t\t\t\ttoggleTriggerMenu={toggleTriggerMenu}\n\t\t\t\tupdateColors={updateColors}\n\t\t\t\tarrayOfColors={arrayOfColors}\n\t\t\t/>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
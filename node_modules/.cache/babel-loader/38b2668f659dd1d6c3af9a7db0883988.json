{"ast":null,"code":"var _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js\";\nimport React, { Component } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport { delettePalette, getPalettes, getCatalogs } from '../../util/apiCalls';\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.updateArrayOfColors = colors => {\n      this.setState({\n        arrayOfColors: colors\n      });\n    };\n\n    this.openMenu = () => {\n      this.setState({\n        triggerMenu: true\n      });\n    };\n\n    this.closeMenu = () => {\n      this.setState({\n        triggerMenu: false\n      });\n    };\n\n    this.updateCurrentPalette = id => {\n      this.setState({\n        currentPalette: id\n      });\n    };\n\n    this.closeSaveMenu = () => {\n      this.setState({\n        showSaveMenu: false\n      });\n    };\n\n    this.openSaveMenu = () => {\n      this.setState({\n        showSaveMenu: true\n      });\n    };\n\n    this.wipeUserData = () => {\n      this.setState({\n        arrayOfColors: [],\n        userName: '',\n        currentCatalog: 0,\n        currentPalette: 0,\n        userId: 0,\n        catalogs: [],\n        palettes: [],\n        showSaveMenu: false\n      });\n    };\n\n    this.deletePalette = async palette => {\n      const id = palette.id;\n      await delettePalette(palette);\n      this.setState({\n        palette: this.state.palettes.filter(palette => palette.id !== id)\n      });\n    };\n\n    this.updateCurrentUser = (user, catalogs, palettes) => {\n      const firstName = user.firstName,\n            id = user.id;\n      this.setState({\n        userName: firstName,\n        userId: id,\n        catalogs: catalogs,\n        palettes\n      });\n    };\n\n    this.updateCurrentCatalog = id => {\n      this.setState({\n        currentCatalog: id\n      });\n    };\n\n    this.resetCurrentCatalog = () => {\n      this.setState({\n        currentCatalog: 0\n      });\n    };\n\n    this.fetchPalettes = async (catalogs = this.state.catalogs) => {\n      if (this.state.userId && this.state.catalogs.length) {\n        const allPalettes = catalogs.map(async catalog => {\n          return await getPalettes(catalog);\n        });\n        const allResolvedPalettes = await Promise.all(allPalettes);\n        this.setState({\n          palettes: allResolvedPalettes.flat()\n        });\n      }\n    };\n\n    this.fetchCatalogs = async (id = {\n      id: this.state.userId\n    }) => {\n      const catalogs = await getCatalogs({\n        id\n      });\n      this.setState({\n        catalogs: catalogs\n      });\n    };\n\n    this.state = {\n      arrayOfColors: [],\n      userName: '',\n      currentCatalog: 0,\n      currentPalette: 0,\n      userId: 0,\n      catalogs: [],\n      palettes: [],\n      showSaveMenu: false,\n      triggerMenu: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(GetRandomColors, {\n      arrayOfColors: this.state.arrayOfColors,\n      updateArrayOfColors: this.updateArrayOfColors,\n      userID: this.state.userId,\n      currentCatalog: this.state.currentCatalog,\n      closeSaveMenu: this.closeSaveMenu,\n      openSaveMenu: this.openSaveMenu,\n      showSaveMenu: this.state.showSaveMenu,\n      catalogs: this.state.catalogs,\n      resetCurrentCatalog: this.resetCurrentCatalog,\n      fetchPalettes: this.fetchPalettes,\n      fetchCatalogs: this.fetchCatalogs,\n      openMenu: this.openMenu,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(NavBar, {\n      userName: this.state.userName,\n      catalogs: this.state.catalogs,\n      updateCurrentUser: this.updateCurrentUser,\n      updateCurrentCatalog: this.updateCurrentCatalog,\n      wipeUserData: this.wipeUserData,\n      updateCurrentPalette: this.updateCurrentPalette,\n      deletePalette: this.deletePalette,\n      palettes: this.state.palettes,\n      resetCurrentCatalog: this.resetCurrentCatalog,\n      fetchPalettes: this.fetchPalettes,\n      fetchCatalogs: this.fetchCatalogs,\n      currentCatalog: this.state.currentCatalog,\n      triggerMenu: this.state.triggerMenu,\n      closeMenu: this.closeMenu,\n      updateArrayOfColors: this.updateArrayOfColors,\n      arrayOfColors: this.state.arrayOfColors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js"],"names":["React","Component","NavBar","Footer","GetRandomColors","delettePalette","getPalettes","getCatalogs","App","constructor","updateArrayOfColors","colors","setState","arrayOfColors","openMenu","triggerMenu","closeMenu","updateCurrentPalette","id","currentPalette","closeSaveMenu","showSaveMenu","openSaveMenu","wipeUserData","userName","currentCatalog","userId","catalogs","palettes","deletePalette","palette","state","filter","updateCurrentUser","user","firstName","updateCurrentCatalog","resetCurrentCatalog","fetchPalettes","length","allPalettes","map","catalog","allResolvedPalettes","Promise","all","flat","fetchCatalogs","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport { delettePalette, getPalettes, getCatalogs } from '../../util/apiCalls';\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tarrayOfColors: [],\n\t\t\tuserName: '',\n\t\t\tcurrentCatalog: 0,\n\t\t\tcurrentPalette: 0,\n\t\t\tuserId: 0,\n\t\t\tcatalogs: [],\n\t\t\tpalettes: [],\n\t\t\tshowSaveMenu: false,\n\t\t\ttriggerMenu: false\n\t\t};\n\t}\n\n\tupdateArrayOfColors = colors => {\n\t\tthis.setState({ arrayOfColors: colors });\n\t};\n\n\topenMenu = () => {\n\t\tthis.setState({ triggerMenu: true });\n\t};\n\n\tcloseMenu = () => {\n\t\tthis.setState({ triggerMenu: false });\n\t};\n\n\tupdateCurrentPalette = id => {\n\t\tthis.setState({ currentPalette: id });\n\t};\n\n\tcloseSaveMenu = () => {\n\t\tthis.setState({\n\t\t\tshowSaveMenu: false\n\t\t});\n\t};\n\n\topenSaveMenu = () => {\n\t\tthis.setState({\n\t\t\tshowSaveMenu: true\n\t\t});\n\t};\n\n\twipeUserData = () => {\n\t\tthis.setState({\n\t\t\tarrayOfColors: [],\n\t\t\tuserName: '',\n\t\t\tcurrentCatalog: 0,\n\t\t\tcurrentPalette: 0,\n\t\t\tuserId: 0,\n\t\t\tcatalogs: [],\n\t\t\tpalettes: [],\n\t\t\tshowSaveMenu: false\n\t\t});\n\t};\n\n\tdeletePalette = async palette => {\n\t\tconst { id } = palette;\n\t\tawait delettePalette(palette);\n\t\tthis.setState({\n\t\t\tpalette: this.state.palettes.filter(palette => palette.id !== id)\n\t\t});\n\t};\n\n\tupdateCurrentUser = (user, catalogs, palettes) => {\n\t\tconst { firstName, id } = user;\n\t\tthis.setState({\n\t\t\tuserName: firstName,\n\t\t\tuserId: id,\n\t\t\tcatalogs: catalogs,\n\t\t\tpalettes\n\t\t});\n\t};\n\n\tupdateCurrentCatalog = id => {\n\t\tthis.setState({ currentCatalog: id });\n\t};\n\n\tresetCurrentCatalog = () => {\n\t\tthis.setState({ currentCatalog: 0 });\n\t};\n\n\tfetchPalettes = async (catalogs = this.state.catalogs) => {\n\t\tif (this.state.userId && this.state.catalogs.length) {\n\t\t\tconst allPalettes = catalogs.map(async catalog => {\n\t\t\t\treturn await getPalettes(catalog);\n\t\t\t});\n\t\t\tconst allResolvedPalettes = await Promise.all(allPalettes);\n\n\t\t\tthis.setState({ palettes: allResolvedPalettes.flat() });\n\t\t}\n\t};\n\n\tfetchCatalogs = async (id = { id: this.state.userId }) => {\n\t\tconst catalogs = await getCatalogs({ id });\n\t\tthis.setState({ catalogs: catalogs });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<GetRandomColors\n\t\t\t\t\tarrayOfColors={this.state.arrayOfColors}\n\t\t\t\t\tupdateArrayOfColors={this.updateArrayOfColors}\n\t\t\t\t\tuserID={this.state.userId}\n\t\t\t\t\tcurrentCatalog={this.state.currentCatalog}\n\t\t\t\t\tcloseSaveMenu={this.closeSaveMenu}\n\t\t\t\t\topenSaveMenu={this.openSaveMenu}\n\t\t\t\t\tshowSaveMenu={this.state.showSaveMenu}\n\t\t\t\t\tcatalogs={this.state.catalogs}\n\t\t\t\t\tresetCurrentCatalog={this.resetCurrentCatalog}\n\t\t\t\t\tfetchPalettes={this.fetchPalettes}\n\t\t\t\t\tfetchCatalogs={this.fetchCatalogs}\n\t\t\t\t\topenMenu={this.openMenu}\n\t\t\t\t/>\n\t\t\t\t<NavBar\n\t\t\t\t\tuserName={this.state.userName}\n\t\t\t\t\tcatalogs={this.state.catalogs}\n\t\t\t\t\tupdateCurrentUser={this.updateCurrentUser}\n\t\t\t\t\tupdateCurrentCatalog={this.updateCurrentCatalog}\n\t\t\t\t\twipeUserData={this.wipeUserData}\n\t\t\t\t\tupdateCurrentPalette={this.updateCurrentPalette}\n\t\t\t\t\tdeletePalette={this.deletePalette}\n\t\t\t\t\tpalettes={this.state.palettes}\n\t\t\t\t\tresetCurrentCatalog={this.resetCurrentCatalog}\n\t\t\t\t\tfetchPalettes={this.fetchPalettes}\n\t\t\t\t\tfetchCatalogs={this.fetchCatalogs}\n\t\t\t\t\tcurrentCatalog={this.state.currentCatalog}\n\t\t\t\t\ttriggerMenu={this.state.triggerMenu}\n\t\t\t\t\tcloseMenu={this.closeMenu}\n\t\t\t\t\tupdateArrayOfColors={this.updateArrayOfColors}\n\t\t\t\t\tarrayOfColors={this.state.arrayOfColors}\n\t\t\t\t/>\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
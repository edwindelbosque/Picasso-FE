{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js\";\nimport React, { useState } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport { delettePalette, getPalettes, getCatalogs } from '../../util/apiCalls';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        arrayOfColors = _useState2[0],\n        updateColors = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userName = _useState4[0],\n        updateUserName = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentCatalog = _useState6[0],\n        updateCurrentCatalog = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        currentPalette = _useState8[0],\n        updateCurrentPalette = _useState8[1];\n\n  const _useState9 = useState(0),\n        _useState10 = _slicedToArray(_useState9, 2),\n        userId = _useState10[0],\n        updateUserId = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        catalogss = _useState12[0],\n        updateCatalogs = _useState12[1];\n\n  const _useState13 = useState([]),\n        _useState14 = _slicedToArray(_useState13, 2),\n        palettes = _useState14[0],\n        updatePalettes = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        showSaveMenu = _useState16[0],\n        toggleSaveMenu = _useState16[1];\n\n  const _useState17 = useState(false),\n        _useState18 = _slicedToArray(_useState17, 2),\n        triggerMenu = _useState18[0],\n        toggleTriggerMenu = _useState18[1];\n\n  const updateArrayOfColors = colors => {\n    updateColors(colors);\n  };\n\n  const openMenu = () => {\n    toggleTriggerMenu(true);\n  };\n\n  const closeMenu = () => {\n    toggleTriggerMenu(false);\n  };\n\n  const closeSaveMenu = () => {\n    toggleSaveMenu(false);\n  };\n\n  const openSaveMenu = () => {\n    toggleSaveMenu(true);\n  };\n\n  const wipeUserData = () => {\n    updateColors([]);\n    updateUserName('');\n    updateCurrentCatalog(0);\n    updateCurrentPalette(0);\n    updateUserId(0);\n    updateCatalogs([]);\n    updatePalettes([]);\n    toggleSaveMenu(false);\n  };\n\n  const deletePalette = async palette => {\n    await delettePalette(palette);\n  };\n\n  const updateCurrentUser = (user, catalogs, palettes) => {\n    const firstName = user.firstName,\n          id = user.id;\n    updateUserName(firstName);\n    updateUserId(id);\n    updateCatalogs(catalogs);\n    updatePalettes(palettes);\n  };\n\n  const resetCurrentCatalog = () => {\n    updateCurrentCatalog(0);\n  };\n\n  const fetchPalettes = async (catalogs = catalogss) => {\n    if (userId) {\n      const allPalettes = catalogs.map(async catalog => {\n        return await getPalettes(catalog);\n      });\n      const allResolvedPalettes = await Promise.all(allPalettes);\n      updatePalettes(allResolvedPalettes.flat());\n    }\n  };\n\n  const fetchCatalogs = async (id = {\n    id: userId\n  }) => {\n    const catalogs = await getCatalogs({\n      id\n    });\n    updateCatalogs(catalogs);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(GetRandomColors, {\n    arrayOfColors: arrayOfColors,\n    updateArrayOfColors: updateArrayOfColors,\n    userID: userId,\n    currentCatalog: currentCatalog,\n    closeSaveMenu: closeSaveMenu,\n    openSaveMenu: openSaveMenu,\n    showSaveMenu: showSaveMenu,\n    catalogs: catalogss,\n    resetCurrentCatalog: resetCurrentCatalog,\n    fetchPalettes: fetchPalettes,\n    fetchCatalogs: fetchCatalogs,\n    openMenu: openMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(NavBar, {\n    userName: userName,\n    catalogs: catalogss,\n    updateCurrentUser: updateCurrentUser,\n    updateCurrentCatalog: updateCurrentCatalog,\n    wipeUserData: wipeUserData,\n    updateCurrentPalette: updateCurrentPalette,\n    deletePalette: deletePalette,\n    palettes: palettes,\n    resetCurrentCatalog: resetCurrentCatalog,\n    fetchPalettes: fetchPalettes,\n    fetchCatalogs: fetchCatalogs,\n    currentCatalog: currentCatalog,\n    triggerMenu: triggerMenu,\n    closeMenu: closeMenu,\n    updateArrayOfColors: updateArrayOfColors,\n    arrayOfColors: arrayOfColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js"],"names":["React","useState","NavBar","Footer","GetRandomColors","delettePalette","getPalettes","getCatalogs","App","arrayOfColors","updateColors","userName","updateUserName","currentCatalog","updateCurrentCatalog","currentPalette","updateCurrentPalette","userId","updateUserId","catalogss","updateCatalogs","palettes","updatePalettes","showSaveMenu","toggleSaveMenu","triggerMenu","toggleTriggerMenu","updateArrayOfColors","colors","openMenu","closeMenu","closeSaveMenu","openSaveMenu","wipeUserData","deletePalette","palette","updateCurrentUser","user","catalogs","firstName","id","resetCurrentCatalog","fetchPalettes","allPalettes","map","catalog","allResolvedPalettes","Promise","all","flat","fetchCatalogs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport { delettePalette, getPalettes, getCatalogs } from '../../util/apiCalls';\n\nconst App = () => {\n\tconst [arrayOfColors, updateColors] = useState([]);\n\tconst [userName, updateUserName] = useState('');\n\tconst [currentCatalog, updateCurrentCatalog] = useState(0);\n\tconst [currentPalette, updateCurrentPalette] = useState(0);\n\tconst [userId, updateUserId] = useState(0);\n\tconst [catalogss, updateCatalogs] = useState([]);\n\tconst [palettes, updatePalettes] = useState([]);\n\tconst [showSaveMenu, toggleSaveMenu] = useState(false);\n\tconst [triggerMenu, toggleTriggerMenu] = useState(false);\n\n\tconst updateArrayOfColors = colors => {\n\t\tupdateColors(colors);\n\t};\n\n\tconst openMenu = () => {\n\t\ttoggleTriggerMenu(true);\n\t};\n\n\tconst closeMenu = () => {\n\t\ttoggleTriggerMenu(false);\n\t};\n\n\tconst closeSaveMenu = () => {\n\t\ttoggleSaveMenu(false);\n\t};\n\n\tconst openSaveMenu = () => {\n\t\ttoggleSaveMenu(true);\n\t};\n\n\tconst wipeUserData = () => {\n\t\tupdateColors([]);\n\t\tupdateUserName('');\n\t\tupdateCurrentCatalog(0);\n\t\tupdateCurrentPalette(0);\n\t\tupdateUserId(0);\n\t\tupdateCatalogs([]);\n\t\tupdatePalettes([]);\n\t\ttoggleSaveMenu(false);\n\t};\n\n\tconst deletePalette = async palette => {\n\t\tawait delettePalette(palette);\n\t};\n\n\tconst updateCurrentUser = (user, catalogs, palettes) => {\n\t\tconst { firstName, id } = user;\n\t\tupdateUserName(firstName);\n\t\tupdateUserId(id);\n\t\tupdateCatalogs(catalogs);\n\t\tupdatePalettes(palettes);\n\t};\n\n\tconst resetCurrentCatalog = () => {\n\t\tupdateCurrentCatalog(0);\n\t};\n\n\tconst fetchPalettes = async (catalogs = catalogss) => {\n\t\tif (userId) {\n\t\t\tconst allPalettes = catalogs.map(async catalog => {\n\t\t\t\treturn await getPalettes(catalog);\n\t\t\t});\n\t\t\tconst allResolvedPalettes = await Promise.all(allPalettes);\n\n\t\t\tupdatePalettes(allResolvedPalettes.flat());\n\t\t}\n\t};\n\n\tconst fetchCatalogs = async (id = { id: userId }) => {\n\t\tconst catalogs = await getCatalogs({ id });\n\t\tupdateCatalogs(catalogs);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<GetRandomColors\n\t\t\t\tarrayOfColors={arrayOfColors}\n\t\t\t\tupdateArrayOfColors={updateArrayOfColors}\n\t\t\t\tuserID={userId}\n\t\t\t\tcurrentCatalog={currentCatalog}\n\t\t\t\tcloseSaveMenu={closeSaveMenu}\n\t\t\t\topenSaveMenu={openSaveMenu}\n\t\t\t\tshowSaveMenu={showSaveMenu}\n\t\t\t\tcatalogs={catalogss}\n\t\t\t\tresetCurrentCatalog={resetCurrentCatalog}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t\tfetchCatalogs={fetchCatalogs}\n\t\t\t\topenMenu={openMenu}\n\t\t\t/>\n\t\t\t<NavBar\n\t\t\t\tuserName={userName}\n\t\t\t\tcatalogs={catalogss}\n\t\t\t\tupdateCurrentUser={updateCurrentUser}\n\t\t\t\tupdateCurrentCatalog={updateCurrentCatalog}\n\t\t\t\twipeUserData={wipeUserData}\n\t\t\t\tupdateCurrentPalette={updateCurrentPalette}\n\t\t\t\tdeletePalette={deletePalette}\n\t\t\t\tpalettes={palettes}\n\t\t\t\tresetCurrentCatalog={resetCurrentCatalog}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t\tfetchCatalogs={fetchCatalogs}\n\t\t\t\tcurrentCatalog={currentCatalog}\n\t\t\t\ttriggerMenu={triggerMenu}\n\t\t\t\tcloseMenu={closeMenu}\n\t\t\t\tupdateArrayOfColors={updateArrayOfColors}\n\t\t\t\tarrayOfColors={arrayOfColors}\n\t\t\t/>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/LoginForm/LoginForm.js\";\nimport React, { useState } from 'react';\nimport { userLogin, getCatalogs } from '../../util/apiCalls.js';\nimport './LoginForm.scss';\n\nconst LoginForm = ({\n  updateCurrentUser\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        emailValue = _useState2[0],\n        handleEmailChange = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        passwordValue = _useState4[0],\n        handlePasswordChange = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loginStatus = _useState6[0],\n        handleLoginAttempt = _useState6[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    handleLoginAttempt('');\n    const newUser = {\n      email: emailValue,\n      password: passwordValue\n    };\n    const loginResponse = await userLogin(newUser);\n\n    if (loginResponse.error) {\n      handleLoginAttempt(loginResponse.error);\n    } else {\n      console.log(updateCurrentUser);\n      const cats = await getCatalogs(loginResponse);\n      updateCurrentUser(loginResponse, cats);\n      resetInputs();\n    }\n  };\n\n  const resetInputs = () => {\n    handleEmailChange('');\n    handlePasswordChange('');\n    handleLoginAttempt('');\n  };\n\n  const checkEmail = () => {\n    const emailSplit = emailValue.split('');\n    const startIncludesSearch = emailSplit.findIndex(character => character === '@');\n    return emailSplit.includes('@') && emailSplit.includes('.', startIncludesSearch) ? true : false;\n  };\n\n  const canBeSubmitted = () => {\n    return checkEmail() && passwordValue.length > 6;\n  };\n\n  const isEnabled = canBeSubmitted();\n  return React.createElement(\"form\", {\n    className: \"Form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"form-login email-login__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"emailForm\",\n    id: \"email\",\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: e => handleEmailChange(e.target.value),\n    value: emailValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"form-login password-login__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"emailForm\",\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: e => handlePasswordChange(e.target.value),\n    value: passwordValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"loginFormBtn\",\n    disabled: !isEnabled,\n    onClick: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/LoginForm/LoginForm.js"],"names":["React","useState","userLogin","getCatalogs","LoginForm","updateCurrentUser","emailValue","handleEmailChange","passwordValue","handlePasswordChange","loginStatus","handleLoginAttempt","handleSubmit","event","preventDefault","newUser","email","password","loginResponse","error","console","log","cats","resetInputs","checkEmail","emailSplit","split","startIncludesSearch","findIndex","character","includes","canBeSubmitted","length","isEnabled","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,wBAAvC;AACA,OAAO,kBAAP;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAA2B;AAAA,oBACJJ,QAAQ,CAAC,EAAD,CADJ;AAAA;AAAA,QACrCK,UADqC;AAAA,QACzBC,iBADyB;;AAAA,qBAEEN,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAErCO,aAFqC;AAAA,QAEtBC,oBAFsB;;AAAA,qBAGFR,QAAQ,CAAC,EAAD,CAHN;AAAA;AAAA,QAGrCS,WAHqC;AAAA,QAGxBC,kBAHwB;;AAK5C,QAAMC,YAAY,GAAG,MAAMC,KAAN,IAAe;AACnCA,IAAAA,KAAK,CAACC,cAAN;AACAH,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACA,UAAMI,OAAO,GAAG;AAAEC,MAAAA,KAAK,EAAEV,UAAT;AAAqBW,MAAAA,QAAQ,EAAET;AAA/B,KAAhB;AACA,UAAMU,aAAa,GAAG,MAAMhB,SAAS,CAACa,OAAD,CAArC;;AACA,QAAIG,aAAa,CAACC,KAAlB,EAAyB;AACxBR,MAAAA,kBAAkB,CAACO,aAAa,CAACC,KAAf,CAAlB;AACA,KAFD,MAEO;AACNC,MAAAA,OAAO,CAACC,GAAR,CAAYhB,iBAAZ;AACA,YAAMiB,IAAI,GAAG,MAAMnB,WAAW,CAACe,aAAD,CAA9B;AACAb,MAAAA,iBAAiB,CAACa,aAAD,EAAgBI,IAAhB,CAAjB;AACAC,MAAAA,WAAW;AACX;AACD,GAbD;;AAeA,QAAMA,WAAW,GAAG,MAAM;AACzBhB,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACAE,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACAE,IAAAA,kBAAkB,CAAC,EAAD,CAAlB;AACA,GAJD;;AAMA,QAAMa,UAAU,GAAG,MAAM;AACxB,UAAMC,UAAU,GAAGnB,UAAU,CAACoB,KAAX,CAAiB,EAAjB,CAAnB;AACA,UAAMC,mBAAmB,GAAGF,UAAU,CAACG,SAAX,CAC3BC,SAAS,IAAIA,SAAS,KAAK,GADA,CAA5B;AAGA,WAAOJ,UAAU,CAACK,QAAX,CAAoB,GAApB,KACNL,UAAU,CAACK,QAAX,CAAoB,GAApB,EAAyBH,mBAAzB,CADM,GAEJ,IAFI,GAGJ,KAHH;AAIA,GATD;;AAWA,QAAMI,cAAc,GAAG,MAAM;AAC5B,WAAOP,UAAU,MAAMhB,aAAa,CAACwB,MAAd,GAAuB,CAA9C;AACA,GAFD;;AAIA,QAAMC,SAAS,GAAGF,cAAc,EAAhC;AAEA,SACC;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,SAAS,EAAC,+BAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,EAIC;AACC,IAAA,SAAS,EAAC,WADX;AAEC,IAAA,EAAE,EAAC,OAFJ;AAGC,IAAA,IAAI,EAAC,MAHN;AAIC,IAAA,IAAI,EAAC,OAJN;AAKC,IAAA,WAAW,EAAC,OALb;AAMC,IAAA,QAAQ,EAAEG,CAAC,IAAI3B,iBAAiB,CAAC2B,CAAC,CAACC,MAAF,CAASC,KAAV,CANjC;AAOC,IAAA,KAAK,EAAE9B,UAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJD,EAaC;AAAO,IAAA,OAAO,EAAC,UAAf;AAA0B,IAAA,SAAS,EAAC,kCAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbD,EAgBC;AACC,IAAA,SAAS,EAAC,WADX;AAEC,IAAA,EAAE,EAAC,UAFJ;AAGC,IAAA,IAAI,EAAC,UAHN;AAIC,IAAA,IAAI,EAAC,UAJN;AAKC,IAAA,WAAW,EAAC,UALb;AAMC,IAAA,QAAQ,EAAE4B,CAAC,IAAIzB,oBAAoB,CAACyB,CAAC,CAACC,MAAF,CAASC,KAAV,CANpC;AAOC,IAAA,KAAK,EAAE5B,aAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBD,EAyBC;AACC,IAAA,IAAI,EAAC,QADN;AAEC,IAAA,SAAS,EAAC,cAFX;AAGC,IAAA,QAAQ,EAAE,CAACyB,SAHZ;AAIC,IAAA,OAAO,EAAEC,CAAC,IAAItB,YAAY,CAACsB,CAAD,CAJ3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAzBD,CADD;AAmCA,CA9ED;;AAgFA,eAAe9B,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport { userLogin, getCatalogs } from '../../util/apiCalls.js';\nimport './LoginForm.scss';\n\nconst LoginForm = ({ updateCurrentUser }) => {\n\tconst [emailValue, handleEmailChange] = useState('');\n\tconst [passwordValue, handlePasswordChange] = useState('');\n\tconst [loginStatus, handleLoginAttempt] = useState('');\n\n\tconst handleSubmit = async event => {\n\t\tevent.preventDefault();\n\t\thandleLoginAttempt('');\n\t\tconst newUser = { email: emailValue, password: passwordValue };\n\t\tconst loginResponse = await userLogin(newUser);\n\t\tif (loginResponse.error) {\n\t\t\thandleLoginAttempt(loginResponse.error);\n\t\t} else {\n\t\t\tconsole.log(updateCurrentUser);\n\t\t\tconst cats = await getCatalogs(loginResponse);\n\t\t\tupdateCurrentUser(loginResponse, cats);\n\t\t\tresetInputs();\n\t\t}\n\t};\n\n\tconst resetInputs = () => {\n\t\thandleEmailChange('');\n\t\thandlePasswordChange('');\n\t\thandleLoginAttempt('');\n\t};\n\n\tconst checkEmail = () => {\n\t\tconst emailSplit = emailValue.split('');\n\t\tconst startIncludesSearch = emailSplit.findIndex(\n\t\t\tcharacter => character === '@'\n\t\t);\n\t\treturn emailSplit.includes('@') &&\n\t\t\temailSplit.includes('.', startIncludesSearch)\n\t\t\t? true\n\t\t\t: false;\n\t};\n\n\tconst canBeSubmitted = () => {\n\t\treturn checkEmail() && passwordValue.length > 6;\n\t};\n\n\tconst isEnabled = canBeSubmitted();\n\n\treturn (\n\t\t<form className='Form'>\n\t\t\t<label htmlFor='email' className='form-login email-login__label'>\n\t\t\t\tEmail\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName='emailForm'\n\t\t\t\tid='email'\n\t\t\t\ttype='text'\n\t\t\t\tname='email'\n\t\t\t\tplaceholder='Email'\n\t\t\t\tonChange={e => handleEmailChange(e.target.value)}\n\t\t\t\tvalue={emailValue}\n\t\t\t/>\n\t\t\t<label htmlFor='password' className='form-login password-login__label'>\n\t\t\t\tPassword\n\t\t\t</label>\n\t\t\t<input\n\t\t\t\tclassName='emailForm'\n\t\t\t\tid='password'\n\t\t\t\ttype='password'\n\t\t\t\tname='password'\n\t\t\t\tplaceholder='Password'\n\t\t\t\tonChange={e => handlePasswordChange(e.target.value)}\n\t\t\t\tvalue={passwordValue}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\ttype='button'\n\t\t\t\tclassName='loginFormBtn'\n\t\t\t\tdisabled={!isEnabled}\n\t\t\t\tonClick={e => handleSubmit(e)}>\n\t\t\t\tSubmit\n\t\t\t</button>\n\t\t</form>\n\t);\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}
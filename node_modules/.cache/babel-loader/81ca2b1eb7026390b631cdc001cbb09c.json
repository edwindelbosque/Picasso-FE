{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js\";\nimport React, { useState } from 'react';\nimport { getFiveColors, createPalette } from '../../util/apiCalls.js';\nimport RandomPalette from '../RandomPalette/RandomPalette.js';\nimport './RandomColor.scss';\n\nconst GetRandomColors = ({\n  arrayOfColors,\n  updateArrayOfColors,\n  userID,\n  currentCatalog\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        paletteNameValue = _useState2[0],\n        handlePaletteNameValueChange = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userIdError = _useState4[0],\n        handleUserIdErrorChange = _useState4[1];\n\n  const handleGenerateColors = async event => {\n    event.preventDefault();\n    getFiveColors(updateArrayOfColors);\n  };\n\n  const handleSavePalette = async event => {\n    console.log('handleSavePalette', arrayOfColors, userID);\n\n    if (userID && currentCatalog) {\n      console.log('YES TO BOTH PALLETNAME AND CATALOG AND COLOR GENERATED');\n      const newPalette = {\n        paletteName: paletteNameValue,\n        catalog_id: currentCatalog,\n        user_id: userID,\n        colors: arrayOfColors\n      };\n      createPalette(newPalette).then(res => res.json()).then(data => console.log('CREATED NEW PALETTE!!', data));\n      handlePaletteNameValueChange('');\n    } else {\n      handleUserIdErrorChange('ERROR');\n    }\n  };\n\n  const canBeSubmitted = () => {\n    return paletteNameValue.length > 0 && currentCatalog > 0 && arrayOfColors.length;\n  };\n\n  const isEnabled = canBeSubmitted();\n  return React.createElement(\"section\", {\n    className: \"random-generator__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"random-generator__div-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"palette-name__label-and__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"palette-name__input\",\n    id: \"palette-name\",\n    type: \"text\",\n    name: \"palette-name\",\n    placeholder: \"Palette Name\",\n    onChange: e => handlePaletteNameValueChange(e.target.value),\n    value: paletteNameValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"SavePaletteBtn\",\n    disabled: !isEnabled,\n    onClick: e => handleSavePalette(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Save Palette\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"GenerateColorsBtn\",\n    onClick: e => handleGenerateColors(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Generate Colors\")), React.createElement(RandomPalette, {\n    palette: arrayOfColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nexport default GetRandomColors;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js"],"names":["React","useState","getFiveColors","createPalette","RandomPalette","GetRandomColors","arrayOfColors","updateArrayOfColors","userID","currentCatalog","paletteNameValue","handlePaletteNameValueChange","userIdError","handleUserIdErrorChange","handleGenerateColors","event","preventDefault","handleSavePalette","console","log","newPalette","paletteName","catalog_id","user_id","colors","then","res","json","data","canBeSubmitted","length","isEnabled","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { getFiveColors, createPalette } from '../../util/apiCalls.js';\nimport RandomPalette from '../RandomPalette/RandomPalette.js';\nimport './RandomColor.scss';\n\nconst GetRandomColors = ({\n\tarrayOfColors,\n\tupdateArrayOfColors,\n\tuserID,\n\tcurrentCatalog\n}) => {\n\tconst [paletteNameValue, handlePaletteNameValueChange] = useState('');\n\tconst [userIdError, handleUserIdErrorChange] = useState('');\n\n\tconst handleGenerateColors = async event => {\n\t\tevent.preventDefault();\n\t\tgetFiveColors(updateArrayOfColors);\n\t};\n\n\tconst handleSavePalette = async event => {\n\t\tconsole.log('handleSavePalette', arrayOfColors, userID);\n\n\t\tif (userID && currentCatalog) {\n\t\t\tconsole.log('YES TO BOTH PALLETNAME AND CATALOG AND COLOR GENERATED');\n\n\t\t\tconst newPalette = {\n\t\t\t\tpaletteName: paletteNameValue,\n\t\t\t\tcatalog_id: currentCatalog,\n\t\t\t\tuser_id: userID,\n\t\t\t\tcolors: arrayOfColors\n\t\t\t};\n\t\t\tcreatePalette(newPalette)\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(data => console.log('CREATED NEW PALETTE!!', data));\n\t\t\thandlePaletteNameValueChange('');\n\t\t} else {\n\t\t\thandleUserIdErrorChange('ERROR');\n\t\t}\n\t};\n\n\tconst canBeSubmitted = () => {\n\t\treturn (\n\t\t\tpaletteNameValue.length > 0 && currentCatalog > 0 && arrayOfColors.length\n\t\t);\n\t};\n\n\tconst isEnabled = canBeSubmitted();\n\n\treturn (\n\t\t<section className='random-generator__section'>\n\t\t\t<div className='random-generator__div-header'>\n\t\t\t\t<div className='palette-name__label-and__input'>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='palette-name__input'\n\t\t\t\t\t\tid='palette-name'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tname='palette-name'\n\t\t\t\t\t\tplaceholder='Palette Name'\n\t\t\t\t\t\tonChange={e => handlePaletteNameValueChange(e.target.value)}\n\t\t\t\t\t\tvalue={paletteNameValue}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='SavePaletteBtn'\n\t\t\t\t\tdisabled={!isEnabled}\n\t\t\t\t\tonClick={e => handleSavePalette(e)}>\n\t\t\t\t\tSave Palette\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype='button'\n\t\t\t\t\tclassName='GenerateColorsBtn'\n\t\t\t\t\tonClick={e => handleGenerateColors(e)}>\n\t\t\t\t\tGenerate Colors\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<RandomPalette palette={arrayOfColors} />\n\t\t</section>\n\t);\n};\n\nexport default GetRandomColors;\n"]},"metadata":{},"sourceType":"module"}
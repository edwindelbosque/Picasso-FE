{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js\";\nimport React, { useState } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport { deleteCatalog, delettePalette, getPalettes, getCatalogs } from '../../util/apiCalls';\n\nconst App = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        arrayOfColors = _useState2[0],\n        updateColors = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userName = _useState4[0],\n        updateUserName = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        currentCatalog = _useState6[0],\n        updateCurrentCatalog = _useState6[1];\n\n  const _useState7 = useState(0),\n        _useState8 = _slicedToArray(_useState7, 2),\n        userId = _useState8[0],\n        updateUserId = _useState8[1];\n\n  const _useState9 = useState([]),\n        _useState10 = _slicedToArray(_useState9, 2),\n        catalogs = _useState10[0],\n        updateCatalogs = _useState10[1];\n\n  const _useState11 = useState([]),\n        _useState12 = _slicedToArray(_useState11, 2),\n        palettes = _useState12[0],\n        updatePalettes = _useState12[1];\n\n  const _useState13 = useState(false),\n        _useState14 = _slicedToArray(_useState13, 2),\n        showSaveMenu = _useState14[0],\n        toggleSaveMenu = _useState14[1];\n\n  const _useState15 = useState(false),\n        _useState16 = _slicedToArray(_useState15, 2),\n        triggerMenu = _useState16[0],\n        toggleTriggerMenu = _useState16[1];\n\n  const wipeUserData = () => {\n    updateColors([]);\n    updateUserName('');\n    updateCurrentCatalog(0);\n    updateUserId(0);\n    updateCatalogs([]);\n    updatePalettes([]);\n    toggleSaveMenu(false);\n  };\n\n  const deletePalette = async palette => {\n    await delettePalette(palette);\n  };\n\n  const removeCatalog = async catalog => {\n    await deleteCatalog(catalog);\n  };\n\n  const updateCurrentUser = (user, catalogs, palettes) => {\n    const firstName = user.firstName,\n          id = user.id;\n    updateUserName(firstName);\n    updateUserId(id);\n    updateCatalogs(catalogs);\n    updatePalettes(palettes);\n  };\n\n  const resetCurrentCatalog = () => {\n    updateCurrentCatalog(0);\n  };\n\n  const fetchPalettes = async (cats = catalogs) => {\n    if (cats.length) {\n      const allPalettes = catalogs.map(async catalog => {\n        return await getPalettes(catalog);\n      });\n      const allResolvedPalettes = await Promise.all(allPalettes);\n      updatePalettes(allResolvedPalettes.flat());\n    }\n  };\n\n  const fetchCatalogs = async (id = {\n    id: userId\n  }) => {\n    const newCatalogs = await getCatalogs({\n      id\n    });\n    updateCatalogs(newCatalogs);\n  };\n\n  return React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(GetRandomColors, {\n    arrayOfColors: arrayOfColors,\n    updateColors: updateColors,\n    userID: userId,\n    currentCatalog: currentCatalog,\n    toggleSaveMenu: toggleSaveMenu,\n    showSaveMenu: showSaveMenu,\n    catalogs: catalogs,\n    resetCurrentCatalog: resetCurrentCatalog,\n    fetchPalettes: fetchPalettes,\n    fetchCatalogs: fetchCatalogs,\n    toggleTriggerMenu: toggleTriggerMenu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }), React.createElement(NavBar, {\n    userName: userName,\n    catalogs: catalogs,\n    updateCurrentUser: updateCurrentUser,\n    updateCurrentCatalog: updateCurrentCatalog,\n    wipeUserData: wipeUserData,\n    deletePalette: deletePalette,\n    palettes: palettes,\n    resetCurrentCatalog: resetCurrentCatalog,\n    fetchPalettes: fetchPalettes,\n    fetchCatalogs: fetchCatalogs,\n    currentCatalog: currentCatalog,\n    triggerMenu: triggerMenu,\n    toggleTriggerMenu: toggleTriggerMenu,\n    updateColors: updateColors,\n    arrayOfColors: arrayOfColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }), React.createElement(Footer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/App/App.js"],"names":["React","useState","NavBar","Footer","GetRandomColors","deleteCatalog","delettePalette","getPalettes","getCatalogs","App","arrayOfColors","updateColors","userName","updateUserName","currentCatalog","updateCurrentCatalog","userId","updateUserId","catalogs","updateCatalogs","palettes","updatePalettes","showSaveMenu","toggleSaveMenu","triggerMenu","toggleTriggerMenu","wipeUserData","deletePalette","palette","removeCatalog","catalog","updateCurrentUser","user","firstName","id","resetCurrentCatalog","fetchPalettes","cats","length","allPalettes","map","allResolvedPalettes","Promise","all","flat","fetchCatalogs","newCatalogs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\nimport NavBar from '../NavBar/NavBar';\nimport Footer from '../Footer/Footer';\nimport GetRandomColors from '../RandomColor/RandomColor.js';\nimport {\n\tdeleteCatalog,\n\tdelettePalette,\n\tgetPalettes,\n\tgetCatalogs\n} from '../../util/apiCalls';\n\nconst App = () => {\n\tconst [arrayOfColors, updateColors] = useState([]);\n\tconst [userName, updateUserName] = useState('');\n\tconst [currentCatalog, updateCurrentCatalog] = useState(0);\n\tconst [userId, updateUserId] = useState(0);\n\tconst [catalogs, updateCatalogs] = useState([]);\n\tconst [palettes, updatePalettes] = useState([]);\n\tconst [showSaveMenu, toggleSaveMenu] = useState(false);\n\tconst [triggerMenu, toggleTriggerMenu] = useState(false);\n\n\tconst wipeUserData = () => {\n\t\tupdateColors([]);\n\t\tupdateUserName('');\n\t\tupdateCurrentCatalog(0);\n\t\tupdateUserId(0);\n\t\tupdateCatalogs([]);\n\t\tupdatePalettes([]);\n\t\ttoggleSaveMenu(false);\n\t};\n\n\tconst deletePalette = async palette => {\n\t\tawait delettePalette(palette);\n\t};\n\n\tconst removeCatalog = async catalog => {\n\t\tawait deleteCatalog(catalog);\n\t};\n\n\tconst updateCurrentUser = (user, catalogs, palettes) => {\n\t\tconst { firstName, id } = user;\n\t\tupdateUserName(firstName);\n\t\tupdateUserId(id);\n\t\tupdateCatalogs(catalogs);\n\t\tupdatePalettes(palettes);\n\t};\n\n\tconst resetCurrentCatalog = () => {\n\t\tupdateCurrentCatalog(0);\n\t};\n\n\tconst fetchPalettes = async (cats = catalogs) => {\n\t\tif (cats.length) {\n\t\t\tconst allPalettes = catalogs.map(async catalog => {\n\t\t\t\treturn await getPalettes(catalog);\n\t\t\t});\n\t\t\tconst allResolvedPalettes = await Promise.all(allPalettes);\n\n\t\t\tupdatePalettes(allResolvedPalettes.flat());\n\t\t}\n\t};\n\n\tconst fetchCatalogs = async (id = { id: userId }) => {\n\t\tconst newCatalogs = await getCatalogs({ id });\n\t\tupdateCatalogs(newCatalogs);\n\t};\n\n\treturn (\n\t\t<div className='App'>\n\t\t\t<GetRandomColors\n\t\t\t\tarrayOfColors={arrayOfColors}\n\t\t\t\tupdateColors={updateColors}\n\t\t\t\tuserID={userId}\n\t\t\t\tcurrentCatalog={currentCatalog}\n\t\t\t\ttoggleSaveMenu={toggleSaveMenu}\n\t\t\t\tshowSaveMenu={showSaveMenu}\n\t\t\t\tcatalogs={catalogs}\n\t\t\t\tresetCurrentCatalog={resetCurrentCatalog}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t\tfetchCatalogs={fetchCatalogs}\n\t\t\t\ttoggleTriggerMenu={toggleTriggerMenu}\n\t\t\t/>\n\t\t\t<NavBar\n\t\t\t\tuserName={userName}\n\t\t\t\tcatalogs={catalogs}\n\t\t\t\tupdateCurrentUser={updateCurrentUser}\n\t\t\t\tupdateCurrentCatalog={updateCurrentCatalog}\n\t\t\t\twipeUserData={wipeUserData}\n\t\t\t\tdeletePalette={deletePalette}\n\t\t\t\tpalettes={palettes}\n\t\t\t\tresetCurrentCatalog={resetCurrentCatalog}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t\tfetchCatalogs={fetchCatalogs}\n\t\t\t\tcurrentCatalog={currentCatalog}\n\t\t\t\ttriggerMenu={triggerMenu}\n\t\t\t\ttoggleTriggerMenu={toggleTriggerMenu}\n\t\t\t\tupdateColors={updateColors}\n\t\t\t\tarrayOfColors={arrayOfColors}\n\t\t\t/>\n\t\t\t<Footer />\n\t\t</div>\n\t);\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/LoginForm/loginForm.js\";\nimport React, { useState } from \"react\";\nimport userLogin from '../../util/apiCalls.js';\n\nconst LoginForm = ({\n  updateCurrentUser\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        emailValue = _useState2[0],\n        handleEmailChange = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        passwordValue = _useState4[0],\n        handlePasswordChange = _useState4[1];\n\n  const _useState5 = useState(\"\"),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loginStatus = _useState6[0],\n        handleLoginAttempt = _useState6[1];\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    handleLoginAttempt('');\n    const newUser = {\n      email: emailValue,\n      password: passwordValue\n    };\n    const loginResponse = await userLogin(newUser);\n\n    if (loginResponse.error) {\n      handleLoginAttempt(loginResponse.error);\n    } else {\n      console.log(updateCurrentUser);\n      updateCurrentUser(loginResponse);\n      resetInputs();\n    }\n  };\n\n  const resetInputs = () => {\n    handleEmailChange('');\n    handlePasswordChange('');\n    handleLoginAttempt('');\n  };\n\n  const checkEmail = () => {\n    const emailSplit = emailValue.split('');\n    const startIncludesSearch = emailSplit.findIndex(character => character === '@');\n    return emailSplit.includes('@') && emailSplit.includes('.', startIncludesSearch) ? true : false;\n  };\n\n  const canBeSubmitted = () => {\n    return checkEmail() && passwordValue.length > 6;\n  };\n\n  const isEnabled = canBeSubmitted();\n  return React.createElement(\"form\", {\n    className: \"Form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    className: \"form-login email-login__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    className: \"emailForm\",\n    id: \"email\",\n    type: \"text\",\n    name: \"email\",\n    placeholder: \"Email\",\n    onChange: e => handleEmailChange(e.target.value),\n    value: emailValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    htmlFor: \"password\",\n    className: \"form-login password-login__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Password\"), React.createElement(\"input\", {\n    className: \"emailForm\",\n    id: \"password\",\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    onChange: e => handlePasswordChange(e.target.value),\n    value: passwordValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"loginFormBtn\",\n    disabled: !isEnabled,\n    onClick: e => handleSubmit(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/LoginForm/loginForm.js"],"names":["React","useState","userLogin","LoginForm","updateCurrentUser","emailValue","handleEmailChange","passwordValue","handlePasswordChange","loginStatus","handleLoginAttempt","handleSubmit","event","preventDefault","newUser","email","password","loginResponse","error","console","log","resetInputs","checkEmail","emailSplit","split","startIncludesSearch","findIndex","character","includes","canBeSubmitted","length","isEnabled","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport userLogin from '../../util/apiCalls.js'\n\nconst LoginForm = ({updateCurrentUser}) => {\n    const [emailValue, handleEmailChange] = useState(\"\");\n    const [passwordValue, handlePasswordChange] = useState(\"\");\n    const [loginStatus, handleLoginAttempt] = useState(\"\");\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        handleLoginAttempt('');\n        const newUser = {email: emailValue, password: passwordValue};\n        const loginResponse = await userLogin(newUser)\n        if (loginResponse.error) {\n            handleLoginAttempt(loginResponse.error)\n        } else {\n            console.log(updateCurrentUser)\n            updateCurrentUser(loginResponse)\n            resetInputs();\n        } \n      }\n\n    const resetInputs = () => {\n        handleEmailChange('')\n        handlePasswordChange('')\n        handleLoginAttempt('')\n    }\n\n    const checkEmail = () => {\n         const emailSplit = emailValue.split('')\n         const startIncludesSearch = emailSplit.findIndex(character => character === '@')\n         return emailSplit.includes('@') && emailSplit.includes('.', startIncludesSearch) ? true : false\n       }\n\n    const canBeSubmitted = () => {\n          return (checkEmail() && passwordValue.length > 6 )\n        }\n\n    const isEnabled = canBeSubmitted()\n\n    return (\n        <form className='Form'>\n            <label htmlFor=\"email\" className=\"form-login email-login__label\">\n                Email\n            </label>\n            <input\n                className=\"emailForm\"\n                id=\"email\"\n                type=\"text\"\n                name=\"email\"\n                placeholder=\"Email\"\n                onChange={ e => handleEmailChange(e.target.value)}\n                value={emailValue}\n            />\n             <label htmlFor=\"password\" className=\"form-login password-login__label\">\n                Password\n            </label>\n            <input\n                className=\"emailForm\"\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                placeholder=\"Password\"\n                onChange={ e => handlePasswordChange(e.target.value)}\n                value={passwordValue}\n            />\n            <button\n                type=\"button\"\n                className=\"loginFormBtn\"\n                disabled={!isEnabled}\n                onClick={(e) => handleSubmit(e)}\n                >\n                Submit\n            </button>\n       </form>\n    )\n}\n\nexport default LoginForm;"]},"metadata":{},"sourceType":"module"}
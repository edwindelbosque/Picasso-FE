{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js\";\nimport React, { useState } from \"react\";\nimport { getFiveColors, createPalette } from '../../util/apiCalls.js';\nimport RandomPalette from \"../RandomPalette/RandomPalette.js\";\nimport './RandomColor.scss';\n\nconst GetRandomColors = ({\n  arrayOfColors,\n  updateArrayOfColors,\n  userID,\n  currentCatalog\n}) => {\n  const _useState = useState(\"\"),\n        _useState2 = _slicedToArray(_useState, 2),\n        paletteNameValue = _useState2[0],\n        handlePaletteNameValueChange = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        userIdError = _useState4[0],\n        handleUserIdErrorChange = _useState4[1];\n\n  const handleGenerateColors = async event => {\n    event.preventDefault();\n    getFiveColors(updateArrayOfColors);\n  };\n\n  const handleSavePalette = async event => {\n    console.log('handleSavePalette', arrayOfColors, userID);\n\n    if (userID && currentCatalog) {\n      console.log('YES TO BOTH PALLETNAME AND CATALOG AND COLOR GENERATED');\n      const newPalette = {\n        paletteName: paletteNameValue,\n        catalog_id: currentCatalog,\n        user_id: userID,\n        colors: arrayOfColors\n      };\n      createPalette(newPalette).then(res => res.json()).then(data => console.log('CREATED NEW PALETTE!!', data));\n      handlePaletteNameValueChange('');\n    } else {\n      handleUserIdErrorChange(\"ERROR\");\n    }\n  };\n\n  const canBeSubmitted = () => {\n    return paletteNameValue.length > 0 && currentCatalog > 0 && arrayOfColors.length;\n  };\n\n  const isEnabled = canBeSubmitted();\n  return React.createElement(\"section\", {\n    className: \"random-generator__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"random-generator__div-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"palette-name__label-and__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"palette-name\",\n    className: \"form-login email-login__label\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Palette Name\"), React.createElement(\"input\", {\n    className: \"palette-name__input\",\n    id: \"palette-name\",\n    type: \"text\",\n    name: \"palette-name\",\n    placeholder: \"Enter Palette Name\",\n    onChange: e => handlePaletteNameValueChange(e.target.value),\n    value: paletteNameValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"SavePaletteBtn\",\n    disabled: !isEnabled,\n    onClick: e => handleSavePalette(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Save Palette\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"GenerateColorsBtn\",\n    onClick: e => handleGenerateColors(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Generate Colors\")), React.createElement(RandomPalette, {\n    palette: arrayOfColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }));\n};\n\nexport default GetRandomColors;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js"],"names":["React","useState","getFiveColors","createPalette","RandomPalette","GetRandomColors","arrayOfColors","updateArrayOfColors","userID","currentCatalog","paletteNameValue","handlePaletteNameValueChange","userIdError","handleUserIdErrorChange","handleGenerateColors","event","preventDefault","handleSavePalette","console","log","newPalette","paletteName","catalog_id","user_id","colors","then","res","json","data","canBeSubmitted","length","isEnabled","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAyBC,aAAzB,QAA6C,wBAA7C;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAO,oBAAP;;AAEA,MAAMC,eAAe,GAAG,CAAC;AAACC,EAAAA,aAAD;AAAgBC,EAAAA,mBAAhB;AAAqCC,EAAAA,MAArC;AAA6CC,EAAAA;AAA7C,CAAD,KAAkE;AAAA,oBAC7BR,QAAQ,CAAC,EAAD,CADqB;AAAA;AAAA,QAC/ES,gBAD+E;AAAA,QAC7DC,4BAD6D;;AAAA,qBAEvCV,QAAQ,CAAC,EAAD,CAF+B;AAAA;AAAA,QAE/EW,WAF+E;AAAA,QAElEC,uBAFkE;;AAItF,QAAMC,oBAAoB,GAAG,MAAMC,KAAN,IAAe;AACxCA,IAAAA,KAAK,CAACC,cAAN;AACCd,IAAAA,aAAa,CAACK,mBAAD,CAAb;AACJ,GAHD;;AAKA,QAAMU,iBAAiB,GAAG,MAAMF,KAAN,IAAe;AACrCG,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCb,aAAjC,EAAgDE,MAAhD;;AAEA,QAAIA,MAAM,IAAIC,cAAd,EAA8B;AAC1BS,MAAAA,OAAO,CAACC,GAAR,CAAY,wDAAZ;AAEA,YAAMC,UAAU,GAAG;AAACC,QAAAA,WAAW,EAAEX,gBAAd;AAAgCY,QAAAA,UAAU,EAAEb,cAA5C;AAA4Dc,QAAAA,OAAO,EAAEf,MAArE;AAA6EgB,QAAAA,MAAM,EAAElB;AAArF,OAAnB;AACAH,MAAAA,aAAa,CAACiB,UAAD,CAAb,CACCK,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOG,IAAI,IAAIV,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCS,IAArC,CAFf;AAGAjB,MAAAA,4BAA4B,CAAC,EAAD,CAA5B;AACH,KARD,MAQO;AACHE,MAAAA,uBAAuB,CAAC,OAAD,CAAvB;AACH;AACJ,GAdD;;AAgBA,QAAMgB,cAAc,GAAG,MAAM;AACzB,WAAQnB,gBAAgB,CAACoB,MAAjB,GAA0B,CAA1B,IAA+BrB,cAAc,GAAG,CAAhD,IAAqDH,aAAa,CAACwB,MAA3E;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAGF,cAAc,EAAhC;AAEC,SACG;AAAS,IAAA,SAAS,EAAC,2BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,gCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,OAAO,EAAC,cAAf;AAA8B,IAAA,SAAS,EAAC,+BAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAII;AACI,IAAA,SAAS,EAAC,qBADd;AAEI,IAAA,EAAE,EAAC,cAFP;AAGI,IAAA,IAAI,EAAC,MAHT;AAII,IAAA,IAAI,EAAC,cAJT;AAKI,IAAA,WAAW,EAAC,oBALhB;AAMI,IAAA,QAAQ,EAAGG,CAAC,IAAIrB,4BAA4B,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CANhD;AAOI,IAAA,KAAK,EAAExB,gBAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAeI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,gBAFd;AAGI,IAAA,QAAQ,EAAE,CAACqB,SAHf;AAII,IAAA,OAAO,EAAGC,CAAD,IAAOf,iBAAiB,CAACe,CAAD,CAJrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAfJ,EAuBI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,SAAS,EAAC,mBAFd;AAGI,IAAA,OAAO,EAAGA,CAAD,IAAOlB,oBAAoB,CAACkB,CAAD,CAHxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAvBJ,CADJ,EAgCI,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAE1B,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhCJ,CADH;AAqCJ,CApED;;AAsEA,eAAeD,eAAf","sourcesContent":["import React, { useState }  from \"react\";\nimport { getFiveColors,  createPalette} from '../../util/apiCalls.js';\nimport RandomPalette from \"../RandomPalette/RandomPalette.js\";\nimport './RandomColor.scss';\n\nconst GetRandomColors = ({arrayOfColors, updateArrayOfColors, userID, currentCatalog}) => {\n    const [paletteNameValue, handlePaletteNameValueChange] = useState(\"\");\n    const [userIdError, handleUserIdErrorChange] = useState(\"\");\n\n    const handleGenerateColors = async event => { \n        event.preventDefault();\n         getFiveColors(updateArrayOfColors)\n    }\n\n    const handleSavePalette = async event => {\n        console.log('handleSavePalette', arrayOfColors, userID);\n        \n        if (userID && currentCatalog) {\n            console.log('YES TO BOTH PALLETNAME AND CATALOG AND COLOR GENERATED');\n            \n            const newPalette = {paletteName: paletteNameValue, catalog_id: currentCatalog, user_id: userID, colors: arrayOfColors}\n            createPalette(newPalette)\n            .then(res => res.json())\n            .then( data => console.log('CREATED NEW PALETTE!!', data))\n            handlePaletteNameValueChange('')\n        } else {\n            handleUserIdErrorChange(\"ERROR\")\n        }\n    }\n\n    const canBeSubmitted = () => {\n        return (paletteNameValue.length > 0 && currentCatalog > 0 && arrayOfColors.length)\n    }\n\n    const isEnabled = canBeSubmitted()\n\n     return (\n        <section className=\"random-generator__section\">\n            <div className=\"random-generator__div-header\">\n                <div className=\"palette-name__label-and__input\">\n                    <label htmlFor=\"palette-name\" className=\"form-login email-login__label\">\n                        Palette Name\n                    </label>\n                    <input\n                        className=\"palette-name__input\"\n                        id=\"palette-name\"\n                        type=\"text\"\n                        name=\"palette-name\"\n                        placeholder=\"Enter Palette Name\"\n                        onChange={ e => handlePaletteNameValueChange(e.target.value)}\n                        value={paletteNameValue}\n                    />\n                </div>\n                <button\n                    type=\"button\"\n                    className=\"SavePaletteBtn\"\n                    disabled={!isEnabled}\n                    onClick={(e) => handleSavePalette(e)}\n                    >\n                    Save Palette\n                </button>\n                <button\n                    type=\"button\"\n                    className=\"GenerateColorsBtn\"\n                    onClick={(e) => handleGenerateColors(e)}\n                    >\n                    Generate Colors\n                </button>\n            </div>\n            <RandomPalette palette={arrayOfColors} />\n        </section>\n     )\n\n}\n\nexport default GetRandomColors"]},"metadata":{},"sourceType":"module"}
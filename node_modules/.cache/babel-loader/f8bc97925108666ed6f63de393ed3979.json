{"ast":null,"code":"import _slicedToArray from \"/Users/edwin/dev/picasso/picasso-fe/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js\";\nimport React, { useState, useEffect } from 'react';\nimport { getFiveColors, createPalette } from '../../util/apiCalls.js';\nimport RandomPalette from '../RandomPalette/RandomPalette.js';\nimport './RandomColor.scss';\nimport SaveMenu from '../SaveMenu/SaveMenu';\nimport { Link } from 'react-router-dom';\n\nconst GetRandomColors = ({\n  arrayOfColors,\n  updateColors,\n  userID,\n  currentCatalog,\n  catalogs,\n  showSaveMenu,\n  toggleSaveMenu,\n  resetCurrentCatalog,\n  fetchPalettes,\n  fetchCatalogs,\n  toggleTriggerMenu\n}) => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        paletteNameValue = _useState2[0],\n        handlePaletteNameValueChange = _useState2[1]; // const [showCatalogs, handleShowCatalogsChange] = useState(false);\n\n\n  const handleGenerateColors = async () => {\n    getFiveColors(updateColors);\n    checkToShowCatalog();\n  };\n\n  useEffect(() => {\n    handleGenerateColors();\n  }, []);\n\n  const checkToShowCatalog = () => {// handleShowCatalogsChange(currentCatalog ? false : true);\n  };\n\n  const handleSavePalette = async event => {\n    if (userID && currentCatalog === 0) {\n      // handleShowCatalogsChange(true);\n      toggleSaveMenu(true);\n    } else {\n      const newPalette = {\n        paletteName: paletteNameValue,\n        catalog_id: currentCatalog,\n        user_id: userID,\n        colorsToString: arrayOfColors\n      };\n      await createPalette(newPalette);\n      handlePaletteNameValueChange('');\n    }\n  };\n\n  const postPalette = async id => {\n    const newPalette = {\n      paletteName: paletteNameValue,\n      catalog_id: id,\n      user_id: userID,\n      colorsToString: arrayOfColors\n    };\n    await createPalette(newPalette);\n    handlePaletteNameValueChange('');\n    resetCurrentCatalog();\n  };\n\n  const canBeSubmitted = () => {\n    return paletteNameValue.length > 0 && arrayOfColors.length;\n  };\n\n  const isEnabled = canBeSubmitted();\n  return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n    className: \"random-generator__section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"random-generator__div-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"palette-name__label-and__input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    className: \"palette-name__input\",\n    id: \"palette-name\",\n    type: \"text\",\n    name: \"palette-name\",\n    placeholder: \"Palette Name\",\n    onChange: e => handlePaletteNameValueChange(e.target.value),\n    value: paletteNameValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  })), userID === 0 ? React.createElement(Link, {\n    to: \"/signup\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"SavePaletteBtn\",\n    disabled: !isEnabled,\n    onClick: () => toggleTriggerMenu(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Save\")) : React.createElement(\"button\", {\n    type: \"button\",\n    className: \"SavePaletteBtn\",\n    disabled: !isEnabled,\n    onClick: e => handleSavePalette(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \"Save\"), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"GenerateColorsBtn\",\n    onClick: e => handleGenerateColors(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Generate Colors\")), React.createElement(RandomPalette, {\n    palette: arrayOfColors,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  })), React.createElement(SaveMenu, {\n    catalogs: catalogs,\n    toggleSaveMenu: toggleSaveMenu,\n    showSaveMenu: showSaveMenu,\n    postPalette: postPalette,\n    userID: userID,\n    fetchPalettes: fetchPalettes,\n    fetchCatalogs: fetchCatalogs,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }));\n};\n\nexport default GetRandomColors;","map":{"version":3,"sources":["/Users/edwin/dev/picasso/picasso-fe/src/components/RandomColor/RandomColor.js"],"names":["React","useState","useEffect","getFiveColors","createPalette","RandomPalette","SaveMenu","Link","GetRandomColors","arrayOfColors","updateColors","userID","currentCatalog","catalogs","showSaveMenu","toggleSaveMenu","resetCurrentCatalog","fetchPalettes","fetchCatalogs","toggleTriggerMenu","paletteNameValue","handlePaletteNameValueChange","handleGenerateColors","checkToShowCatalog","handleSavePalette","event","newPalette","paletteName","catalog_id","user_id","colorsToString","postPalette","id","canBeSubmitted","length","isEnabled","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getFiveColors, createPalette } from '../../util/apiCalls.js';\nimport RandomPalette from '../RandomPalette/RandomPalette.js';\nimport './RandomColor.scss';\nimport SaveMenu from '../SaveMenu/SaveMenu';\nimport { Link } from 'react-router-dom';\nconst GetRandomColors = ({\n\tarrayOfColors,\n\tupdateColors,\n\tuserID,\n\tcurrentCatalog,\n\tcatalogs,\n\tshowSaveMenu,\n\ttoggleSaveMenu,\n\tresetCurrentCatalog,\n\tfetchPalettes,\n\tfetchCatalogs,\n\ttoggleTriggerMenu\n}) => {\n\tconst [paletteNameValue, handlePaletteNameValueChange] = useState('');\n\t// const [showCatalogs, handleShowCatalogsChange] = useState(false);\n\tconst handleGenerateColors = async () => {\n\t\tgetFiveColors(updateColors);\n\t\tcheckToShowCatalog();\n\t};\n\n\tuseEffect(() => {\n\t\thandleGenerateColors();\n\t}, []);\n\n\tconst checkToShowCatalog = () => {\n\t\t// handleShowCatalogsChange(currentCatalog ? false : true);\n\t};\n\tconst handleSavePalette = async event => {\n\t\tif (userID && currentCatalog === 0) {\n\t\t\t// handleShowCatalogsChange(true);\n\t\t\ttoggleSaveMenu(true);\n\t\t} else {\n\t\t\tconst newPalette = {\n\t\t\t\tpaletteName: paletteNameValue,\n\t\t\t\tcatalog_id: currentCatalog,\n\t\t\t\tuser_id: userID,\n\t\t\t\tcolorsToString: arrayOfColors\n\t\t\t};\n\t\t\tawait createPalette(newPalette);\n\t\t\thandlePaletteNameValueChange('');\n\t\t}\n\t};\n\n\tconst postPalette = async id => {\n\t\tconst newPalette = {\n\t\t\tpaletteName: paletteNameValue,\n\t\t\tcatalog_id: id,\n\t\t\tuser_id: userID,\n\t\t\tcolorsToString: arrayOfColors\n\t\t};\n\t\tawait createPalette(newPalette);\n\t\thandlePaletteNameValueChange('');\n\t\tresetCurrentCatalog();\n\t};\n\n\tconst canBeSubmitted = () => {\n\t\treturn paletteNameValue.length > 0 && arrayOfColors.length;\n\t};\n\tconst isEnabled = canBeSubmitted();\n\treturn (\n\t\t<>\n\t\t\t<section className='random-generator__section'>\n\t\t\t\t<div className='random-generator__div-header'>\n\t\t\t\t\t<div className='palette-name__label-and__input'>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName='palette-name__input'\n\t\t\t\t\t\t\tid='palette-name'\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tname='palette-name'\n\t\t\t\t\t\t\tplaceholder='Palette Name'\n\t\t\t\t\t\t\tonChange={e => handlePaletteNameValueChange(e.target.value)}\n\t\t\t\t\t\t\tvalue={paletteNameValue}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t\t{userID === 0 ? (\n\t\t\t\t\t\t<Link to='/signup'>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\t\tclassName='SavePaletteBtn'\n\t\t\t\t\t\t\t\tdisabled={!isEnabled}\n\t\t\t\t\t\t\t\tonClick={() => toggleTriggerMenu(true)}>\n\t\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\t\tclassName='SavePaletteBtn'\n\t\t\t\t\t\t\tdisabled={!isEnabled}\n\t\t\t\t\t\t\tonClick={e => handleSavePalette(e)}>\n\t\t\t\t\t\t\tSave\n\t\t\t\t\t\t</button>\n\t\t\t\t\t)}\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype='button'\n\t\t\t\t\t\tclassName='GenerateColorsBtn'\n\t\t\t\t\t\tonClick={e => handleGenerateColors(e)}>\n\t\t\t\t\t\tGenerate Colors\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t\t<RandomPalette palette={arrayOfColors} />\n\t\t\t</section>\n\t\t\t<SaveMenu\n\t\t\t\tcatalogs={catalogs}\n\t\t\t\ttoggleSaveMenu={toggleSaveMenu}\n\t\t\t\tshowSaveMenu={showSaveMenu}\n\t\t\t\tpostPalette={postPalette}\n\t\t\t\tuserID={userID}\n\t\t\t\tfetchPalettes={fetchPalettes}\n\t\t\t\tfetchCatalogs={fetchCatalogs}\n\t\t\t/>\n\t\t</>\n\t);\n};\nexport default GetRandomColors;\n"]},"metadata":{},"sourceType":"module"}